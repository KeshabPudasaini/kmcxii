#include <stdio.h>
#include <math.h>
#include <stdbool.h>

// Function declarations
float areaRectangle(float length, float width);
float areaCircle(float radius);
float areaTriangle(float base, float height);
float volumeSphere(float radius);
float surfaceAreaFootball(float radius);
float areaTriangleSides(float a, float b, float c);
float celsiusToFahrenheit(float celsius);
float fahrenheitToCelsius(float fahrenheit);
bool isOdd(int num);
int checkPositiveNegativeZero(int num);
int checkGreaterOfTwo(int a, int b);
int checkGreaterOfThree(int a, int b, int c);
float arithmeticOperations(int a, int b, int choice);
int factorial(int num);
bool isPrime(int num);
int reverseNumber(int num);
bool checkPalindrome(int num);
bool checkArmstrong(int num);
int sumOfDigits(int num);
int productOfDigits(int num);
int countDigits(int num);
int sumNaturalNumbers(int n);
int sumEvenNaturalNumbers(int n);
int sumOddNaturalNumbers(int n);

int main() {
    float length, width, radius, base, height, a, b, c, celsius, fahrenheit;
    int num,num1,num2, n, choice, day;

    // Area of Rectangle
    printf("Enter the length and width of the rectangle: ");
    scanf("%f %f", &length, &width);
    printf("Area of Rectangle: %.2f\n", areaRectangle(length, width));

    // Area of Circle
    printf("Enter the radius of the circle: ");
    scanf("%f", &radius);
    printf("Area of Circle: %.2f\n", areaCircle(radius));

    // Area of Triangle
    printf("Enter the base and height of the triangle: ");
    scanf("%f %f", &base, &height);
    printf("Area of Triangle: %.2f\n", areaTriangle(base, height));

    // Volume of Sphere
    printf("Enter the radius of the sphere: ");
    scanf("%f", &radius);
    printf("Volume of Sphere: %.2f\n", volumeSphere(radius));

    // Surface Area of Football
    printf("Enter the radius of the football: ");
    scanf("%f", &radius);
    printf("Surface Area of Football: %.2f\n", surfaceAreaFootball(radius));

    // Area of Triangle (sides given)
    printf("Enter the three sides of the triangle: ");
    scanf("%f %f %f", &a, &b, &c);
    printf("Area of Triangle with sides %.2f, %.2f, %.2f: %.2f\n", a, b, c, areaTriangleSides(a, b, c));

    // Celsius to Fahrenheit
    printf("Enter temperature in Celsius: ");
    scanf("%f", &celsius);
    printf("Temperature in Fahrenheit: %.2f\n", celsiusToFahrenheit(celsius));

    // Fahrenheit to Celsius
    printf("Enter temperature in Fahrenheit: ");
    scanf("%f", &fahrenheit);
    printf("Temperature in Celsius: %.2f\n", fahrenheitToCelsius(fahrenheit));

    // Check odd or even
    printf("Enter a number to check if it's odd or even: ");
    scanf("%d", &num);
    if (isOdd(num)) {
        printf("%d is odd\n", num);
    } else {
        printf("%d is even\n", num);
    }

    // Check positive, negative, or zero
    printf("Enter a number to check if it's positive, negative, or zero: ");
    scanf("%d", &num);
    int posNegZero = checkPositiveNegativeZero(num);
    if (posNegZero > 0) {
        printf("%d is positive\n", num);
    } else if (posNegZero < 0) {
        printf("%d is negative\n", num);
    } else {
        printf("%d is zero\n", num);
    }

    // Check greater of two numbers
    printf("Enter two numbers to find the greater: ");
    scanf("%d %d", &num1, &num2);
    printf("Greater number: %d\n", checkGreaterOfTwo(num1, num2));

    // Check greater of three numbers
    int num3;
    printf("Enter three numbers to find the greatest: ");
    scanf("%d %d %d", &num1, &num2, &num3);
    printf("Greatest number: %d\n", checkGreaterOfThree(num1, num2, num3));

    // Switch case to perform arithmetic operations
    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);
    printf("Enter choice (1-Add, 2-Subtract, 3-Multiply, 4-Divide): ");
    scanf("%d", &choice);
    printf("Result: %.2f\n", arithmeticOperations(num1, num2, choice));


    // Factorial of a number
    printf("Enter a number to find its factorial: ");
    scanf("%d", &num);
    printf("Factorial: %d\n", factorial(num));

    // Prime or Composite number
    printf("Enter a number to check if it's prime or composite: ");
    scanf("%d", &num);
    if (isPrime(num)) {
        printf("%d is a prime number\n", num);
    } else {
        printf("%d is a composite number\n", num);
    }

    // Reverse of a number
    printf("Enter a number to reverse: ");
    scanf("%d", &num);
    printf("Reversed Number: %d\n", reverseNumber(num));

    // Check Palindrome number
    printf("Enter a number to check if it's a palindrome: ");
    scanf("%d", &num);
    if (checkPalindrome(num)) {
        printf("%d is a palindrome\n", num);
    } else {
        printf("%d is not a palindrome\n", num);
    }

    // Check Armstrong number
    printf("Enter a number to check if it's an Armstrong number: ");
    scanf("%d", &num);
    if (checkArmstrong(num)) {
        printf("%d is an Armstrong number\n", num);
    } else {
        printf("%d is not an Armstrong number\n", num);
    }

    // Sum of the digits
    printf("Enter a number to find the sum of its digits: ");
    scanf("%d", &num);
    printf("Sum of digits: %d\n", sumOfDigits(num));

    // Product of the digits
    printf("Enter a number to find the product of its digits: ");
    scanf("%d", &num);
    printf("Product of digits: %d\n", productOfDigits(num));

    // Count the digits
    printf("Enter a number to count its digits: ");
    scanf("%d", &num);
    printf("Number of digits: %d\n", countDigits(num));

    // Sum of n natural numbers
    printf("Enter a number to find the sum of first n natural numbers: ");
    scanf("%d", &n);
    printf("Sum of first %d natural numbers: %d\n", n, sumNaturalNumbers(n));

    // Sum of even n natural numbers
    printf("Enter a number to find the sum of first n even natural numbers: ");
    scanf("%d", &n);
    printf("Sum of first %d even natural numbers: %d\n", n, sumEvenNaturalNumbers(n));

    // Sum of odd n natural numbers
    printf("Enter a number to find the sum of first n odd natural numbers: ");
    scanf("%d", &n);
    printf("Sum of first %d odd natural numbers: %d\n", n, sumOddNaturalNumbers(n));

    return 0;
}

float areaRectangle(float length, float width) {
    return length * width;
}

float areaCircle(float radius) {
    return M_PI * radius * radius;
}

float areaTriangle(float base, float height) {
    return 0.5 * base * height;
}

float volumeSphere(float radius) {
    return (4.0 / 3.0) * M_PI * pow(radius, 3);
}

float surfaceAreaFootball(float radius) {
    return 4 * M_PI * pow(radius, 2);
}

float areaTriangleSides(float a, float b, float c) {
    float s = (a + b + c) / 2;
    return sqrt(s * (s - a) * (s - b) * (s - c));
}

float celsiusToFahrenheit(float celsius) {
    return (celsius * 9 / 5) + 32;
}

float fahrenheitToCelsius(float fahrenheit) {
    return (fahrenheit - 32) * 5 / 9;
}

bool isOdd(int num) {
    return num % 2 != 0;
}

int checkPositiveNegativeZero(int num) {
    if (num > 0) {
        return 1;
    } else if (num < 0) {
        return -1;
    } else {
        return 0;
    }
}

int checkGreaterOfTwo(int a, int b) {
    return (a > b) ? a : b;
}

int checkGreaterOfThree(int a, int b, int c) {
    if (a > b && a > c) {
        return a;
    } else if (b > c) {
        return b;
    } else {
        return c;
    }
}

float arithmeticOperations(int a, int b, int choice) {
    switch (choice) {
        case 1:
            return a + b;
        case 2:
            return a - b;
        case 3:
            return a * b;
        case 4:
            if (b != 0) {
                return (float)a / b;
            } else {
                printf("Cannot divide by zero\n");
                return 0;
            }
        default:
            printf("Invalid choice\n");
            return 0;
    }
}

int factorial(int num) {
    long long fact = 1;
    for (int i = 1; i <= num; ++i) {
        fact *= i;
    }
    return fact;
}

bool isPrime(int num) {
    if (num <= 1) {
        return false;
    }
    for (int i = 2; i <= sqrt(num); ++i) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}

int reverseNumber(int num) {
    int reversed = 0;
    while (num != 0) {
        int digit = num % 10;
        reversed = reversed * 10 + digit;
        num /= 10;
    }
    return reversed;
}

bool checkPalindrome(int num) {
    return num == reverseNumber(num);
}

bool checkArmstrong(int num) {
    int original = num, result = 0, n = 0;
    while (original != 0) {
        original /= 10;
        ++n;
    }
    original = num;
    while (original != 0) {
        int remainder = original % 10;
        result += pow(remainder, n);
        original /= 10;
    }
    return result == num;
}

int sumOfDigits(int num) {
    int sum = 0;
    while (num != 0) {
        sum += num % 10;
        num /= 10;
    }
    return sum;
}

int productOfDigits(int num) {
    int product = 1;
    while (num != 0) {
        product *= num % 10;
        num /= 10;
    }
    return product;
}

int countDigits(int num) {
    int count = 0;
    while (num != 0) {
        num /= 10;
        ++count;
    }
    return count;
}

int sumNaturalNumbers(int n) {
    return n * (n + 1) / 2;
}

int sumEvenNaturalNumbers(int n) {
    int sum = 0;
    for (int i = 2; i <= n; i += 2) {
        sum += i;
    }
    return sum;
}

int sumOddNaturalNumbers(int n) {
    int sum = 0;
    for (int i = 1; i <= n; i += 2) {
        sum += i;
    }
    return sum;
}

